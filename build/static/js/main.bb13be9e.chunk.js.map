{"version":3,"sources":["components/Header.js","utils/API.js","components/SearchForm.js","components/Table.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","id","axios","get","SearchForm","props","onChange","searchByName","value","search","name","type","placeholder","Table","state","results","sortOrder","event","target","searchEmp","toLowerCase","setState","sortFirstName","sortedEmp","sort","a","b","first","reverse","sortLastName","last","API","then","res","data","catch","err","console","log","this","onClick","map","item","includes","src","picture","thumbnail","alt","phone","email","login","uuid","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bb13be9e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../styles/header.css\"\r\n\r\nfunction Header() {\r\n    return (\r\n        <div>\r\n            <div className=\"jumbotron jumbotron-fluid\" id=\"header\">\r\n                <div className=\"container\">\r\n                    <h1 className=\"display-4\">Employee Directory</h1>\r\n                    <p className=\"lead\">Click on the carrots to filter by heading or use the search box to narrow your results</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","// getting api info from https://randomuser.me/documentation#howto using axios npm (make sure to install and import)\r\n\r\nimport axios from \"axios\";\r\nconst url = \"https://randomuser.me/api/?results=60&nat=us\";\r\n\r\n//fetches users from API- only calling for 60 \r\nexport default {\r\n    fetchUsers: function() {\r\n        return axios    \r\n            .get(url)\r\n    }\r\n}","import React from \"react\";\r\nimport \"../styles/searchForm.css\"\r\n\r\nfunction SearchForm(props) {\r\n    return (\r\n        <form>\r\n            <div className=\"form-group\">\r\n                <input\r\n                    onChange={props.searchByName}\r\n                    value={props.search}\r\n                    name=\"search\"\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Search for an Employee\"\r\n                    id=\"search\"\r\n                />\r\n\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default SearchForm;\r\n","import React, { Component } from \"react\";\r\nimport API from \"../utils/API.js\";\r\nimport SearchForm from \"./SearchForm\";\r\nimport \"../styles/table.css\"\r\n\r\n\r\n\r\nclass Table extends Component {\r\n  state = {\r\n    search: \"\",\r\n    results: [],\r\n    sortOrder: \"\"\r\n  };\r\n\r\n//users are loaded to the page on initial render\r\n  componentDidMount() {\r\n    API.fetchUsers()\r\n      .then(res => {\r\n        this.setState({ results: res.data.results })\r\n        //console.log(this.state.results)\r\n      }).catch(err => console.log(err))\r\n  }\r\n\r\n  //searching an employee name- setting it to lowercase so everything matches\r\n  searchByName = event => {\r\n    if (event.target.name === \"search\") {\r\n      const searchEmp = event.target.value.toLowerCase();\r\n      this.setState({\r\n        search: searchEmp\r\n      })\r\n    }\r\n  }\r\n\r\n //Sorting users by their first name. Initial render state has no order-- set state updates the sortOrder value\r\n sortFirstName = () => {\r\n  const sortedEmp = this.state.results.sort((a, b) => {\r\n    if (b.name.first > a.name.first) {\r\n      return -1\r\n    }\r\n    if (a.name.first > b.name.first) {\r\n      return 1\r\n    }\r\n    return 0;\r\n  });\r\n\r\n  if (this.state.sortOrder === \"decending\") {\r\n    sortedEmp.reverse();\r\n    this.setState({ sortOrder: \"ascending\" });\r\n  } else {\r\n    this.setState({ sortOrder: \"decending\" });\r\n  }\r\n  this.setState({ results: sortedEmp })\r\n}\r\n\r\n //Sorting users by their last name. Initial render state has no order-- set state updates the sortOrder value\r\nsortLastName = () => {\r\n  const sortedEmp = this.state.results.sort((a, b) => {\r\n    if (b.name.last > a.name.last) {\r\n      return -1\r\n    }\r\n    if (a.name.last > b.name.last) {\r\n      return 1\r\n    }\r\n    return 0;\r\n  });\r\n  if (this.state.sortOrder === \"decending\") {\r\n    sortedEmp.reverse();\r\n    this.setState({ sortOrder: \"ascending\" });\r\n  } else {\r\n    this.setState({ sortOrder: \"decending\" });\r\n  }\r\n  this.setState({ results: sortedEmp })\r\n}\r\n\r\n//Render items \r\nrender() {\r\n  return (\r\n    <div>\r\n      <SearchForm searchByName={this.searchByName}\r\n        search={this.state.search} />\r\n\r\n      <div className=\"table-responsive\">\r\n      <table className=\"table table-resposive text-center table-hover\">\r\n          <thead>\r\n            <tr>\r\n              <th>Image</th>\r\n              <th>First Name  <button  onClick={this.sortFirstName}>^</button></th>\r\n              <th>Last Name <button  onClick={this.sortLastName}>^</button></th>\r\n              <th>Phone</th>\r\n              <th>Email</th>\r\n            </tr>\r\n          </thead>\r\n\r\n          { //filtering results returned by searching first name\r\n            this.state.results && this.state.results.map(item =>\r\n              item.name.first.toLowerCase().includes(this.state.search) ?\r\n                <tbody key={item.login.uuid}>\r\n                  <tr>\r\n                    <td ><img src={item.picture.thumbnail}  alt=\"user thumbnail\"/></td>\r\n                    <td >{item.name.first}</td>\r\n                    <td >{item.name.last}</td>\r\n                    <td >{item.phone}</td>\r\n                    <td >{item.email}</td>      \r\n                  </tr>\r\n                </tbody>\r\n\r\n                :\r\n                //filtering results returned by searching last name\r\n                item.name.last.toLowerCase().includes(this.state.search) ?\r\n                  <tbody key={item.login.uuid}>\r\n                    <tr>\r\n                    <td ><img src={item.picture.thumbnail}  alt=\"user thumbnail\" /></td>\r\n                      <td >{item.name.first}</td>\r\n                      <td >{item.name.last}</td>\r\n                      <td >{item.phone} </td>\r\n                      <td >{item.email}</td> \r\n                    </tr>\r\n                  </tbody>\r\n                  :\r\n                  null\r\n            )}\r\n        </table>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n}\r\nexport default Table;","import React from \"react\";\nimport Header from \"./components/Header\";\nimport Table from \"./components/Table\"\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n  \n      <Table />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}